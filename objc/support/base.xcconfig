// Architectures
SUPPORTED_PLATFORMS = macosx iphonesimulator iphoneos watchos watchsimulator appletvos appletvsimulator
VALID_ARCHS = $(ARCHS_STANDARD)

// Build Options
ENABLE_TESTABILITY = YES

// Deployment
DEPLOYMENT_POSTPROCESSING = YES
SKIP_INSTALL = YES
IPHONEOS_DEPLOYMENT_TARGET = 8.0
MACOSX_DEPLOYMENT_TARGET = 10.9
TVOS_DEPLOYMENT_TARGET = 9.0
WATCHOS_DEPLOYMENT_TARGET = 2.0

// Linking
DYLIB_COMPATIBILITY_VERSION = 1
DYLIB_CURRENT_VERSION = 1
DEAD_CODE_STRIPPING = YES
OTHER_LDFLAGS[sdk=iphonesimulator*] = -framework UIKit
OTHER_LDFLAGS[sdk=iphoneos*] = -framework UIKit
OTHER_LDFLAGS[sdk=macosx*] = -framework Cocoa
LD_RUNPATH_SEARCH_PATHS = $(inherited) @executable_path/../Frameworks @loader_path/Frameworks

// Packaging
DEFINES_MODULE = YES
INFOPLIST_FILE = $(SRCROOT)/support/$(PRODUCT_NAME)_Info.plist
PRODUCT_BUNDLE_IDENTIFIER = com.Tencent.$(PRODUCT_NAME)
PRODUCT_MODULE_NAME = $(PRODUCT_NAME)
PRODUCT_NAME = $(TARGET_NAME)

// Search Paths
FRAMEWORK_SEARCH_PATHS = $(PLATFORM_DIR)/Developer/Library/Frameworks
LIBRARY_SEARCH_PATHS[sdk=macosx*] = $(inherited) $(SDKROOT)/usr/lib/system

// Signing
CODE_SIGN_IDENTITY[sdk=iphoneos*] = iPhone Developer
CODE_SIGN_STYLE = Automatic

// Versioning
VERSIONING_SYSTEM = apple-generic

// Code Generation
GCC_INLINES_ARE_PRIVATE_EXTERN = YES
GCC_NO_COMMON_BLOCKS = YES

// Custom Compiler Flags
OTHER_CFLAGS = -Wglobal-constructors

// Language
GCC_C_LANGUAGE_STANDARD = gnu11

// Language - C++
CLANG_CXX_LANGUAGE_STANDARD = gnu++14
CLANG_CXX_LIBRARY = libc++
GCC_ENABLE_CPP_EXCEPTIONS = NO
GCC_ENABLE_CPP_RTT = YES

// Language - Modules
CLANG_ENABLE_MODULES = YES
CLANG_MODULES_AUTOLINK = NO

// Language - Objective-C
CLANG_ENABLE_OBJC_ARC = YES
CLANG_ENABLE_OBJC_WEAK = YES

// Preprocessing
ENABLE_STRICT_OBJC_MSGSEND = YES

// Warnings - All languages
CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES
CLANG_WARN_DOCUMENTATION_COMMENTS = YES
CLANG_WARN_EMPTY_BODY = YES
CLANG_WARN_BOOL_CONVERSION = YES
CLANG_WARN_CONSTANT_CONVERSION = YES
GCC_WARN_64_TO_32_BIT_CONVERSION = YES
CLANG_WARN_ENUM_CONVERSION = YES
CLANG_WARN_INT_CONVERSION = YES
CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES
CLANG_WARN_INFINITE_RECURSION = YES
GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR
CLANG_WARN_STRICT_PROTOTYPES = YES
CLANG_WARN_COMMA = YES
GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE
CLANG_WARN_UNREACHABLE_CODE = YES
GCC_WARN_UNUSED_FUNCTION = YES
GCC_WARN_UNUSED_VARIABLE = YES

// Warnings - C++
GCC_WARN_NON_VIRTUAL_DESTRUCTOR = YES
CLANG_WARN_RANGE_LOOP_ANALYSIS = YES
CLANG_WARN_SUSPICIOUS_MOVE = YES

// Warning - Objective-C
CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR
CLANG_WARN__DUPLICATE_METHOD_MATCH = YES
CLANG_WARN_OBJC_LITERAL_CONVERSION = YES
GCC_WARN_UNDECLARED_SELECTOR = YES
CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR

// Warnings - Objective-C and ARC
CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES

// Static Analyzer - Generic Issues
CLANG_ANALYZER_NONNULL = YES

// User-Defined
ENABLE_BITCODE = NO
